{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Heikki.000\\\\fullstack-2019\\\\palautukset\\\\osa1\\\\unicafe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Heikki.000\\\\fullstack-2019\\\\palautukset\\\\osa1\\\\unicafe\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  const Statistics = props => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, 'statistics')), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, 'good ', \" \", props.good), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, 'neutral', \"  \", props.neutral), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, 'bad ', \" \", props.bad), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, 'total ', \" \", props.total), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, 'average ', \" \", (props.good - props.bad) / (props.good + props.bad + props.neutral)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, 'positive ', \" \", 100 * (props.good / (props.good + props.bad + props.neutral)), \" \", '%'));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, 'give feedback')), React.createElement(\"button\", {\n    onClick: () => setGood(good + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"good\"), React.createElement(\"button\", {\n    onClick: () => setNeutral(neutral + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"neutral\"), React.createElement(\"button\", {\n    onClick: () => setBad(bad + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"bad\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Statistics, {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    total: {\n      good\n    } + {\n      bad\n    } + {\n      neutal\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }))));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Heikki.000/fullstack-2019/palautukset/osa1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","App","good","setGood","neutral","setNeutral","bad","setBad","Statistics","props","total","neutal","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const Statistics = (props) => {\n    return (\n      <div>\n      <h1>\n        <p>{'statistics'}</p>\n      </h1>\n      <p>{'good '} {props.good}</p>\n      <p>{'neutral'}  {props.neutral}</p>\n      <p>{'bad '} {props.bad}</p>\n      <p>{'total '} {(props.total)}</p>\n      <p>{'average '} {(props.good - props.bad)/(props.good + props.bad + props.neutral)}</p>\n      <p>{'positive '} {100  *  (props.good /(props.good + props.bad + props.neutral))} {'%'}</p>\n  </div>\n    )\n  }\n\n  return (\n    <div>\n        <div>\n          <h1>\n            <p>{'give feedback'}</p>\n          </h1>\n            <button onClick={() => setGood(good + 1)}>\n                good\n            </button>\n            <button onClick={() => setNeutral(neutral + 1)}>\n                neutral\n            </button>\n            <button onClick={() => setBad(bad + 1)}>\n                bad\n            </button>\n            <div>\n              <Statistics good={good} neutral={neutral} bad={bad} total={{good} + {bad} + {neutal}} />\n            </div>\n        </div>\n\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}