{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Heikki.000\\\\fullstack-2019\\\\palautukset\\\\osa1\\\\unicafe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Heikki.000\\\\fullstack-2019\\\\palautukset\\\\osa1\\\\unicafe\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Statistics = props => {\n  let total = props.good + props.neutral + props.bad;\n\n  if (total == 0) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, 'statistics')), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, 'no feedback given'));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, 'statistics')), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, 'good ', \" \", props.good), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, 'neutral', \"  \", props.neutral), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, 'bad ', \" \", props.bad), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, 'total ', \" \", total), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, 'average ', \" \", (props.good - props.bad) / total), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, 'positive ', \" \", 100 * (props.good / total), \" \", '%'));\n};\n\nconst App = () => {\n  const Button = props => React.createElement(\"button\", {\n    onClick: props.handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, props.text); // tallenna napit omaan tilaansa\n\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, 'give feedback')), React.createElement(\"button\", {\n    onClick: () => setGood(good + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"good\"), React.createElement(\"button\", {\n    onClick: () => setNeutral(neutral + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"neutral\"), React.createElement(\"button\", {\n    onClick: () => setBad(bad + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"bad\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Statistics, {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Heikki.000/fullstack-2019/palautukset/osa1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Statistics","props","total","good","neutral","bad","App","Button","handleClick","text","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Statistics = (props) => {\n  let total = props.good + props.neutral + props.bad\n  if (total == 0) {\n    return (\n      <div>\n        <h1>\n          <p>{'statistics'}</p>\n        </h1>\n        <p>{'no feedback given'}</p>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <h1>\n        <p>{'statistics'}</p>\n      </h1>\n      <p>{'good '} {props.good}</p>\n      <p>{'neutral'}  {props.neutral}</p>\n      <p>{'bad '} {props.bad}</p>\n      <p>{'total '} {(total)}</p>\n      <p>{'average '} {(props.good - props.bad)/(total)}</p>\n      <p>{'positive '} {100  *  (props.good /(total))} {'%'}</p>\n    </div>\n  )\n}\n\n\nconst App = () => {\n\n  const Button = (props) => (\n    <button onClick={props.handleClick}>\n      {props.text}\n    </button>\n  )\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  \n  return (\n    <div>\n        <div>\n          <h1>\n            <p>{'give feedback'}</p>\n          </h1>\n            <button onClick={() => setGood(good + 1)}>\n                good\n            </button>\n            <button onClick={() => setNeutral(neutral + 1)}>\n                neutral\n            </button>\n            <button onClick={() => setBad(bad + 1)}>\n                bad\n            </button>\n            <div>\n              <Statistics good={good} neutral={neutral} bad={bad} />\n            </div>\n        </div>\n\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}